{"version":3,"sources":["components/VenueImage.tsx","components/VenueDetails.tsx","components/VenueContainer.tsx","components/Discovery.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getClassNames","online","VenueImage","blurhash","className","hash","width","height","VenueDetails","num","name","rating","Math","round","toFixed","VenueContainer","venue","popularity","sortByOnline","arr","sort","a","b","Number","getCarousel","category","length","dots","infinite","slidesToShow","slidesToScroll","speed","swipeToSlide","map","uuidv4","Discovery","useState","popularVenues","setPopularVenues","newVenues","setNewVenues","nearbyVenues","setNearbyVenues","getVenues","popularUnsorted","data","sections","restaurants","newUnsorted","nearbyUnsorted","sorted","sortByPopularity","dateA","Date","launch_date","sortByNew","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAQMA,EAAgB,SAACC,GACrB,OAAOA,EAAS,QAAU,sBAiBbC,EAdI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAUF,EAAkC,EAAlCA,OAC9B,OACE,sBAAKG,UAAU,aAAf,WACIH,GAAU,oBAAIG,UAAU,UAAd,qBACZ,cAAC,IAAD,CACEA,UAAWJ,EAAcC,GACzBI,KAAMF,EACNG,MAAO,IACPC,OAAQ,UCRVC,EAAe,SAAC,GAAiD,IAJhDC,EAICC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,OAAQV,EAAgC,EAAhCA,OACpC,OACE,sBAAKG,UAAU,eAAf,UACE,mBAAGA,UAAU,aAAb,SAA2BM,IAC3B,sBAAKN,UAAU,aAAf,UACE,mBAAGA,UAAU,cAAb,UATeK,EAS2BE,GARxCC,KAAKC,MAAY,IAANJ,GAAa,IAAIK,QAAQ,MAStC,mBAAGV,UAAU,cAAb,SAA4BH,EAAS,OAAS,kBCKvCc,EAbQ,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MACxB,OACE,sBAAKZ,UAAU,iBAAf,UACE,cAAC,EAAD,CAAYD,SAAUa,EAAMb,SAAUF,OAAQe,EAAMf,SACpD,cAAC,EAAD,CACES,KAAMM,EAAMN,KACZC,OAAQK,EAAMC,WACdhB,OAAQe,EAAMf,a,OCMhBiB,EAAe,SAACC,GAGpB,OAFwB,YAAOA,GACPC,MAAK,SAACC,EAAGC,GAAJ,OAAUC,OAAOD,EAAErB,QAAUsB,OAAOF,EAAEpB,YAsB/DuB,EAAc,SAACL,EAAeM,GAClC,OACE,sBAAKrB,UAAU,oBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BqB,IAC/B,qBAAIrB,UAAU,kBAAd,kBAAsCe,EAAIO,OAA1C,UAEF,cAAC,IAAD,CACEC,MAAM,EACNC,SAAUT,EAAIO,OAAS,EACvBG,aAAc,EACdC,eAAgB,EAChBC,MAAO,IACPC,cAAc,EANhB,SASGb,EAAIc,KAAI,SAACjB,GAAD,OACP,cAAC,EAAD,CAA+BA,MAAOA,GAAjBkB,wBAOzBC,EAAmC,WAAO,IAAD,EACHC,mBAAmB,IADhB,mBACtCC,EADsC,KACvBC,EADuB,OAEXF,mBAAmB,IAFR,mBAEtCG,EAFsC,KAE3BC,EAF2B,OAGLJ,mBAAmB,IAHd,mBAGtCK,EAHsC,KAGxBC,EAHwB,KAKvCC,EAAY,WAChB,IAAMC,EAAkBC,EAAKC,SAAS,GAAGC,YACnCC,EAAcH,EAAKC,SAAS,GAAGC,YAC/BE,EAAiBJ,EAAKC,SAAS,GAAGC,YAExCT,EApDqB,SAACnB,GACxB,IACM+B,EADkB,YAAO/B,GACPC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEL,WAAaI,EAAEJ,cAExD,OADuBC,EAAagC,GAiDjBC,CAAiBP,IAClCJ,EA9Cc,SAACrB,GACjB,IACM+B,EADkB,YAAO/B,GACPC,MAAK,SAACC,EAAGC,GAC/B,IAAM8B,EAAa,IAAIC,KAAKhC,EAAEiC,aAE9B,OADmB,IAAID,KAAK/B,EAAEgC,aACfF,KAGjB,OADuBlC,EAAagC,GAuCrBK,CAAUP,IACvBN,EAAgBxB,EAAa+B,KAO/B,OAJAO,qBAAU,WACRb,MACC,IAGD,0BAASvC,UAAU,YAAnB,UACGoB,EAAYa,EAAe,WAC3Bb,EAAYe,EAAW,OACvBf,EAAYiB,EAAc,cCpFlBgB,EAJkB,WAC/B,OAAO,cAAC,EAAD,KCOMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bcb91f78.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Blurhash } from 'react-blurhash';\r\n\r\ntype imageContainerProps = {\r\n  blurhash: string;\r\n  online: boolean;\r\n};\r\n\r\nconst getClassNames = (online: boolean) => {\r\n  return online ? 'image' : 'image imageOffline';\r\n};\r\n\r\nconst VenueImage = ({ blurhash, online }: imageContainerProps) => {\r\n  return (\r\n    <div className=\"venueImage\">\r\n      {!online && <h3 className=\"offline\">Offline</h3>}\r\n      <Blurhash\r\n        className={getClassNames(online)}\r\n        hash={blurhash}\r\n        width={240}\r\n        height={135}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VenueImage;\r\n","import * as React from 'react';\r\n\r\ntype VenueDetailsProps = {\r\n  name: string;\r\n  rating: number;\r\n  online: boolean;\r\n};\r\n\r\nconst convertRating = (num: number) => {\r\n  return (Math.round(num * 100) / 10).toFixed(1);\r\n};\r\n\r\nconst VenueDetails = ({ name, rating, online }: VenueDetailsProps) => {\r\n  return (\r\n    <div className=\"venueDetails\">\r\n      <p className=\"venueTitle\">{name}</p>\r\n      <div className=\"venueStats\">\r\n        <p className=\"venueRating\">{convertRating(rating)}</p>\r\n        <p className=\"venueOnline\">{online ? 'Open' : 'Closed'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { VenueDetails, convertRating };\r\n","import * as React from 'react';\r\nimport VenueImage from './VenueImage';\r\nimport { VenueDetails } from './VenueDetails';\r\nimport { IVenue } from './Discovery';\r\n\r\ntype VenueContainerProps = {\r\n  venue: IVenue;\r\n  key: string;\r\n};\r\n\r\nconst VenueContainer = ({ venue }: VenueContainerProps) => {\r\n  return (\r\n    <div className=\"venueContainer\">\r\n      <VenueImage blurhash={venue.blurhash} online={venue.online} />\r\n      <VenueDetails\r\n        name={venue.name}\r\n        rating={venue.popularity}\r\n        online={venue.online}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VenueContainer;\r\n","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nimport VenueContainer from './VenueContainer';\r\nimport data from '../data/discovery_page.json';\r\nimport '../App.css';\r\n\r\nexport interface IVenue {\r\n  blurhash: string;\r\n  launch_date: string;\r\n  location: number[];\r\n  name: string;\r\n  online: boolean;\r\n  popularity: number;\r\n}\r\n\r\ninterface IVenueProps {}\r\n\r\nconst sortByOnline = (arr: IVenue[]) => {\r\n  const original: IVenue[] = [...arr];\r\n  const sorted = original.sort((a, b) => Number(b.online) - Number(a.online));\r\n  return sorted;\r\n};\r\n\r\nconst sortByPopularity = (arr: IVenue[]) => {\r\n  const original: IVenue[] = [...arr];\r\n  const sorted = original.sort((a, b) => b.popularity - a.popularity);\r\n  const sortedByOnline = sortByOnline(sorted);\r\n  return sortedByOnline;\r\n};\r\n\r\nconst sortByNew = (arr: IVenue[]) => {\r\n  const original: IVenue[] = [...arr];\r\n  const sorted = original.sort((a, b) => {\r\n    const dateA: any = new Date(a.launch_date);\r\n    const dateB: any = new Date(b.launch_date);\r\n    return dateB - dateA;\r\n  });\r\n  const sortedByOnline = sortByOnline(sorted);\r\n  return sortedByOnline;\r\n};\r\n\r\nconst getCarousel = (arr: IVenue[], category: string) => {\r\n  return (\r\n    <div className=\"carouselContainer\">\r\n      <div className=\"category\">\r\n        <h2 className=\"categoryTitle\">{category}</h2>\r\n        <h3 className=\"categoryEntries\">All ({arr.length})</h3>\r\n      </div>\r\n      <Slider\r\n        dots={true}\r\n        infinite={arr.length > 5}\r\n        slidesToShow={5}\r\n        slidesToScroll={1}\r\n        speed={800}\r\n        swipeToSlide={true}\r\n        // lazyLoad=\"ondemand\"\r\n      >\r\n        {arr.map((venue) => (\r\n          <VenueContainer key={uuidv4()} venue={venue} />\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Discovery: React.FC<IVenueProps> = () => {\r\n  const [popularVenues, setPopularVenues] = useState<IVenue[]>([]);\r\n  const [newVenues, setNewVenues] = useState<IVenue[]>([]);\r\n  const [nearbyVenues, setNearbyVenues] = useState<IVenue[]>([]);\r\n\r\n  const getVenues = () => {\r\n    const popularUnsorted = data.sections[0].restaurants;\r\n    const newUnsorted = data.sections[1].restaurants;\r\n    const nearbyUnsorted = data.sections[2].restaurants;\r\n\r\n    setPopularVenues(sortByPopularity(popularUnsorted));\r\n    setNewVenues(sortByNew(newUnsorted));\r\n    setNearbyVenues(sortByOnline(nearbyUnsorted));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getVenues();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"discovery\">\r\n      {getCarousel(popularVenues, 'Popular')}\r\n      {getCarousel(newVenues, 'New')}\r\n      {getCarousel(nearbyVenues, 'Nearby')}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { Discovery, sortByPopularity, sortByNew, sortByOnline, getCarousel };\r\n","import * as React from 'react';\r\nimport './App.css';\r\nimport { Discovery } from './components/Discovery';\r\n\r\ninterface IAppProps {}\r\n\r\nconst App: React.FC<IAppProps> = () => {\r\n  return <Discovery />;\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}